% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ddst.uniform.test.R
\name{ddst.uniform.test}
\alias{ddst.uniform.test}
\alias{ddst.uniform.Nk}
\title{Data Driven Smooth Test for Uniformity}
\usage{
ddst.uniform.test(
  x,
  base = ddst.base.legendre,
  d.n = 10,
  c = 2.4,
  nr = 1e+05,
  compute.p = TRUE,
  alpha = 0.05,
  compute.cv = TRUE,
  ...
)
}
\arguments{
\item{x}{a (non-empty) numeric vector of data}

\item{base}{a function which returns an orthonormal system, possible choice: \code{ddst.base.legendre} for the Legendre polynomials and \code{ddst.base.cos} for the cosine system}

\item{d.n}{an integer specifying the maximum dimension considered, only for advanced users}

\item{c}{a calibrating parameter in the penalty in the model selection rule}

\item{nr}{an integer specifying the number of runs for a p-value and a critical value computation if any}

\item{compute.p}{a logical value indicating whether to compute a p-value or not}

\item{alpha}{a significance level}

\item{compute.cv}{a logical value indicating whether to compute a critical value corresponding to the significance level alpha or not}

\item{...}{further arguments}
}
\value{
An object of class \code{htest}
\item{statistic }{the value of the test statistic.}
\item{parameter }{the number of choosen coordinates (k).}
\item{method }{a character string indicating the parameters of performed test. }
\item{data.name }{a character string giving the name(s) of the data. }
\item{p.value }{the p-value for the test, computed only if \code{compute.p=T}.}
}
\description{
Performs data driven smooth tests for simple hypothesis of uniformity on [0,1].
Embeding null model into the original exponential family introduced by Neyman (1937).
}
\examples{
set.seed(7)
# H0 is true
z <- runif(80)
t <- ddst.uniform.test(z, compute.p = TRUE, d.n = 10)
t
plot(t)

# known fixed alternative
z <- rnorm(80,10,16)
t <- ddst.uniform.test(pnorm(z, 10, 16), compute.p = TRUE, d.n = 10)
t
plot(t)

# H0 is false
z <- rbeta(80,4,2)
(t <- ddst.uniform.test(z, compute.p = TRUE, d.n = 10))
t$p.value
plot(t)
}
\references{
Inglot, T., Ledwina, T. (2006). Towards data driven selection of a penalty function for data driven Neyman tests. \emph{ Linear Algebra and its Appl.} \bold{ 417}, 579--590.

Ledwina, T. (1994). Data driven version of Neyman's smooth test of fit. \emph{ J. Amer. Statist. Assoc.} \bold{ 89} 1000-1005.

Neyman, J. (1937). `Smooth test' for goodness of fit. \emph{Skand. Aktuarietidskr.} \bold{ 20}, 149-199.
}
\keyword{htest}
